{
  "name": "whisperdesk-enhanced",
  "version": "3.5.3",
  "description": "Advanced cross-platform transcription application with AI-powered speech recognition",
  "main": "src/main/main.js",
  "homepage": "https://whisperdesk.com",
  "author": {
    "name": "first form Labs",
    "email": "support@firstform.com"
  },
  "license": "MIT",
  "private": true,
  "scripts": {
    "_comment_core_scripts": "=== CORE APPLICATION SCRIPTS ===",
    "start": "electron .",
    "dev": "npm run dev:clean && npm run dev:start",
    "dev:clean": "rimraf dist build node_modules/.cache temp",
    "dev:start": "concurrently \"npm run dev:renderer\" \"wait-on http://localhost:3000 && npm run dev:main\"",
    "dev:renderer": "cd src/renderer/whisperdesk-ui && pnpm run dev",
    "dev:main": "cross-env NODE_ENV=development nodemon --watch src/main --exec electron .",
    "_comment_build_scripts": "=== BUILD SCRIPTS ===",
    "build": "npm run build:renderer && npm run build:main",
    "build:renderer": "cd src/renderer/whisperdesk-ui && npm run build",
    "build:main": "echo 'Main process ready'",
    "build:whisper": "node tools/setup/build-whisper-official.js",
    "build:all": "npm run build:whisper && npm run build:diarization",
    "_comment_whisper_platform_scripts": "=== WHISPER PLATFORM-SPECIFIC ===",
    "build:whisper:windows": "powershell -ExecutionPolicy Bypass -File tools/setup/compile-whisper-windows.ps1",
    "build:whisper:unix": "bash tools/setup/build-whisper.sh",
    "_comment_diarization_scripts": "=== DIARIZATION SCRIPTS ===",
    "setup:diarization": "npm run _ensure:submodule && node scripts/setup-diarization.js",
    "setup:diarization:verbose": "npm run _ensure:submodule && node scripts/setup-diarization.js --verbose",
    "check:diarization": "node scripts/check-diarization.js",
    "build:diarization": "npm run setup:diarization",
    "clean:diarization": "rm -rf binaries/diarize-cli* binaries/*onnxruntime* models/*.onnx",
    "rebuild:diarization": "npm run clean:diarization && npm run setup:diarization",
    "_comment_helper_scripts": "=== HELPER SCRIPTS ===",
    "_ensure:submodule": "git submodule update --init --recursive || echo 'Submodule update failed or not in git repo'",
    "_install:renderer": "cd src/renderer/whisperdesk-ui && pnpm install && cd ../../..",
    "_comment_electron_build_scripts": "=== ELECTRON BUILD & DISTRIBUTION ===",
    "electron:build": "npm run build && cp -r src/main dist/ && electron-builder && node scripts/rename-portable.js",
    "electron:build:win": "npm run build && electron-builder --win && node scripts/rename-portable.js",
    "dist": "npm run build:whisper && npm run electron:build",
    "dist:win": "npm run build && electron-builder --win && node scripts/rename-portable.js",
    "dist:mac": "npm run build && electron-builder --mac && node scripts/rename-portable.js",
    "dist:linux": "npm run build && electron-builder --linux && node scripts/rename-portable.js",
    "dist:all": "npm run build && electron-builder --win --mac --linux && node scripts/rename-portable.js",
    "_comment_setup_scripts": "=== SETUP & INSTALLATION ===",
    "install:all": "npm install && cd src/renderer/whisperdesk-ui && pnpm install && cd ../../.. && npm run build:whisper",
    "postinstall": "npm run _ensure:submodule && npm run _install:renderer && npm run setup:platform",
    "setup": "./setup.sh",
    "setup:platform": "node scripts/setup-platform-specific.js",
    "setup:check": "node tools/setup/setup-check.js",
    "setup:complete": "npm run build:whisper && npm run setup:diarization && npm run download:model:tiny",
    "setup:dev": "npm run setup:complete && npm run dev",
    "_comment_model_scripts": "=== MODEL MANAGEMENT ===",
    "download:model:tiny": "mkdir -p models && curl -L -o models/ggml-tiny.bin https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-tiny.bin",
    "_comment_objc2_scripts": "=== OBJC2 SCREENCAPTUREKIT NATIVE MODULE ===",
    "build:native": "cd native && ./build.sh",
    "build:native:universal": "cd native && ./build-universal.sh",
    "clean:native": "cd native/whisperdesk-screencapturekit && cargo clean",
    "setup:objc2": "npm run build:native && npm run test:objc2",
    "test:objc2": "node scripts/test-objc2-screencapturekit.js",
    "_comment_testing_scripts": "=== TESTING & VALIDATION ===",
    "test": "jest",
    "test:transcription": "node test-transcription.js",
    "test:binary": "node -e \"const BinaryManager = require('./src/main/services/binary-manager-dll'); (async () => { const bm = new BinaryManager(); await bm.initialize(); const status = await bm.getStatus(); console.log(JSON.stringify(status, null, 2)); })()\"",
    "_comment_dev_server_scripts": "=== DEVELOPMENT SERVERS ===",
    "web": "concurrently \"npm run server\" \"cd src/renderer/whisperdesk-ui && pnpm run dev\"",
    "_comment_utility_scripts": "=== UTILITY SCRIPTS ===",
    "lint": "eslint src/ scripts/ tools/",
    "lint:fix": "eslint src/ scripts/ tools/ --fix",
    "format": "prettier --write \"src/**/*.js\" \"scripts/**/*.js\" \"tools/**/*.js\" \"*.js\" \"*.json\" \"*.md\"",
    "format:check": "prettier --check \"src/**/*.js\" \"scripts/**/*.js\" \"tools/**/*.js\" \"*.js\" \"*.json\" \"*.md\"",
    "clean": "rimraf dist build node_modules/.cache temp",
    "clean:all": "npm run clean && rimraf binaries models",
    "clean:binary": "rimraf binaries",
    "_comment_release_scripts": "=== RELEASE MANAGEMENT ===",
    "release:prepare": "npm run clean && npm run build && npm run dist:all",
    "release:github": "gh release create v$npm_package_version dist/* --generate-notes",
    "version:patch": "npm version patch && git push && git push --tags",
    "version:minor": "npm version minor && git push && git push --tags",
    "version:major": "npm version major && git push && git push --tags"
  },
  "dependencies": {
    "@firstform/caprecorder": "^1.0.0",
    "axios": "^1.6.2",
    "electron-store": "^8.1.0",
    "electron-updater": "^6.1.7",
    "execa": "^8.0.1",
    "form-data": "^4.0.0",
    "uuid": "^11.1.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "electron": "^27.1.3",
    "electron-builder": "^24.13.3",
    "eslint": "^9.28.0",
    "nodemon": "^3.1.10",
    "prettier": "^3.3.3",
    "rimraf": "^5.0.5",
    "wait-on": "^7.2.0"
  },
  "optionalDependencies": {
    "@firstform/caprecorder-win32-x64-msvc": "^1.0.0",
    "@firstform/caprecorder-darwin-x64": "^1.0.0",
    "@firstform/caprecorder-darwin-arm64": "^1.0.0",
    "@firstform/caprecorder-linux-x64-gnu": "^1.0.0",
    "@firstform/caprecorder-linux-arm64-gnu": "^1.0.0"
  },
  "whisperdesk": {
    "binaryManagement": {
      "autoFix": true,
      "preferStatic": true,
      "fallbackStrategies": [
        "download",
        "build",
        "bundle"
      ],
      "platforms": {
        "darwin": {
          "staticLinking": true,
          "architectures": [
            "x64",
            "arm64"
          ],
          "dependencyCheck": "otool",
          "executable": "whisper-cli",
          "preferredRecordingMethod": "macos-native"
        },
        "win32": {
          "staticLinking": false,
          "architectures": [
            "x64"
          ],
          "bundleRuntime": true,
          "executable": "whisper-cli.exe",
          "buildMethod": "official-dll",
          "preferredRecordingMethod": "windows-hybrid"
        },
        "linux": {
          "staticLinking": true,
          "architectures": [
            "x64"
          ],
          "dependencyCheck": "ldd",
          "executable": "whisper-cli",
          "preferredRecordingMethod": "linux-hybrid"
        }
      }
    },
    "models": {
      "defaultModel": "tiny",
      "downloadOnSetup": true,
      "supportedModels": [
        "tiny",
        "base",
        "small",
        "medium",
        "large-v2",
        "large-v3"
      ]
    },
    "diarization": {
      "optional": true,
      "submodule": "deps/diarization",
      "repository": "https://github.com/ahzs645/whisperdesk-diarization.git",
      "binaries": {
        "win32": "diarize-cli.exe",
        "darwin": "diarize-cli",
        "linux": "diarize-cli"
      },
      "models": [
        "segmentation-3.0.onnx",
        "embedding-1.0.onnx"
      ]
    }
  },
  "build": {
    "appId": "com.whisperdesk.app",
    "productName": "WhisperDesk",
    "copyright": "Copyright Â© 2024 WhisperDesk Team",
    "artifactName": "${productName}-${version}-${os}-${arch}.${ext}",
    "directories": {
      "output": "dist",
      "buildResources": "resources"
    },
    "asar": true,
    "asarUnpack": [
      "binaries/**/*",
      "models/**/*"
    ],
    "files": [
      "dist/main/**/*",
      "src/renderer/whisperdesk-ui/dist/**/*",
      "src/shared/**/*",
      "package.json",
      "!src/renderer/whisperdesk-ui/src/**/*",
      "!src/renderer/whisperdesk-ui/public/**/*",
      "!src/renderer/whisperdesk-ui/node_modules/**/*",
      "!**/node_modules/.cache/**/*",
      "!deps/**/*"
    ],
    "extraResources": [
      {
        "from": "binaries/",
        "to": "binaries/",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "models/",
        "to": "models/",
        "filter": [
          "**/*"
        ]
      }
    ],
    "win": {
      "icon": "resources/icons/icon.ico",
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64"
          ]
        }
      ],
      "publisherName": "WhisperDesk",
      "verifyUpdateCodeSignature": false,
      "requestedExecutionLevel": "asInvoker",
      "certificateFile": null,
      "certificatePassword": null,
      "signingHashAlgorithms": [
        "sha256"
      ],
      "signAndEditExecutable": true,
      "signDlls": false,
      "extraFiles": [
        {
          "from": "binaries/whisper.dll",
          "to": "binaries/whisper.dll"
        },
        {
          "from": "binaries/ggml.dll",
          "to": "binaries/ggml.dll"
        },
        {
          "from": "binaries/ggml-base.dll",
          "to": "binaries/ggml-base.dll"
        },
        {
          "from": "binaries/ggml-cpu.dll",
          "to": "binaries/ggml-cpu.dll"
        },
        {
          "from": "binaries/SDL2.dll",
          "to": "binaries/SDL2.dll"
        },
        {
          "from": "binaries/whisper-cli.exe",
          "to": "binaries/whisper-cli.exe"
        },
        {
          "from": "binaries/diarize-cli.exe",
          "to": "binaries/diarize-cli.exe"
        },
        {
          "from": "binaries/onnxruntime.dll",
          "to": "binaries/onnxruntime.dll"
        }
      ]
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "WhisperDesk",
      "installerIcon": "resources/icons/icon.ico",
      "uninstallerIcon": "resources/icons/icon.ico",
      "artifactName": "${productName}-Setup-${version}-${os}-${arch}.${ext}",
      "include": "resources/installer.nsh",
      "warningsAsErrors": false,
      "deleteAppDataOnUninstall": false
    },
    "mac": {
      "icon": "resources/icons/icon.icns",
      "target": [
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "category": "public.app-category.productivity",
      "entitlements": "resources/entitlements.mac.plist",
      "entitlementsInherit": "resources/entitlements.mac.plist",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "identity": null,
      "type": "development",
      "notarize": false,
      "extendInfo": {
        "NSCameraUseContinuityCameraDeviceType": true,
        "NSScreenCaptureRequiresUserApproval": true,
        "NSMicrophoneUsageDescription": "WhisperDesk needs microphone access to record audio for transcription.",
        "NSScreenCaptureUsageDescription": "WhisperDesk needs screen recording access to capture screen content and system audio.",
        "NSAppleEventsUsageDescription": "WhisperDesk needs Apple Events access for enhanced recording features."
      },
      "extraFiles": [
        {
          "from": "binaries/whisper-cli",
          "to": "binaries/whisper-cli"
        },
        {
          "from": "binaries/diarize-cli",
          "to": "binaries/diarize-cli"
        },
        {
          "from": "binaries/libonnxruntime.dylib",
          "to": "binaries/libonnxruntime.dylib"
        },
        {
          "from": "binaries/libonnxruntime.1.16.3.dylib",
          "to": "binaries/libonnxruntime.1.16.3.dylib"
        }
      ]
    },
    "linux": {
      "icon": "resources/icons/icon.png",
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "rpm",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "tar.gz",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "AudioVideo",
      "desktop": {
        "StartupNotify": "true"
      },
      "extraFiles": [
        {
          "from": "binaries/whisper-cli",
          "to": "binaries/whisper-cli"
        },
        {
          "from": "binaries/diarize-cli",
          "to": "binaries/diarize-cli"
        }
      ]
    }
  },
  "keywords": [
    "transcription",
    "speech-to-text",
    "whisper",
    "whisper-cli",
    "ai",
    "audio",
    "voice",
    "electron",
    "cross-platform",
    "native",
    "real-time",
    "diarization",
    "multi-speaker",
    "screen-recording",
    "caprecorder"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/ahzs645/WhisperDesk.git"
  },
  "bugs": {
    "url": "https://github.com/ahzs645/WhisperDesk/issues"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "config": {
    "forge": {
      "packagerConfig": {
        "icon": "resources/icons/icon.icns"
      }
    }
  }
}
